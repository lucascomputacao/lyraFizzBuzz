/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package lyraTdd;

import org.junit.Test;
import static org.junit.Assert.*;

public class AppTest {

    @Test
    public void fizzBuzzOfOne() {
        // GIVEN - SETUP
        App app = new App();

        // WHEN - ACTION
        String result = app.fizzBuzz(1);

        // THEN - ASSERTION
        assertEquals(result, String.valueOf(1));

    }

    @Test
    public void fizzBuzzOfThree() {
        // GIVEN - SETUP
        App app = new App();

        // WHEN - ACTION
        String result = app.fizzBuzz(3);

        // THEN - ASSERTION
        assertEquals(result, "Fizz");

    }

    @Test
    public void fizzBuzzOfFive() {
        // GIVEN - SETUP
        App app = new App();

        // WHEN - ACTION
        String result = app.fizzBuzz(5);

        // THEN - ASSERTION
        assertEquals(result, "Buzz");

    }

    @Test
    public void fizzBuzzOfThreFive() {
        // GIVEN - SETUP
        App app = new App();

        // WHEN - ACTION
        String result = app.fizzBuzz(15);

        // THEN - ASSERTION
        assertEquals(result, "FizzBuzz");

    }

    @Test
    public void fizzBuzzOneToTen() {
        // GIVEN - SETUP
        App app = new App();
        StringBuilder result = new StringBuilder();
        int ten = 10;

        // WHEN - ACTION
        for (int i = 1; i <= ten; i++) {
            result.append(app.fizzBuzz(i)).append(putBreakLineOnStringIfNecessary(ten, i));
        }

        // THEN - ASSERTION
        assertEquals(result.toString(), "1\n2\nFizz\n4\nBuzz\nFizz\n7\n8\nFizz\nBuzz");
    }

    @Test
    public void fizzBuzzOneToFifteen() {
        // GIVEN - SETUP
        App app = new App();
        StringBuilder result = new StringBuilder();
        int fifteen = 15;

        // WHEN - ACTION
        for (int i = 1; i <= fifteen; i++) {
            result.append(app.fizzBuzz(i)).append(putBreakLineOnStringIfNecessary(fifteen, i));
        }

        // THEN - ASSERTION
        assertEquals(result.toString(), "1\n2\nFizz\n4\nBuzz\nFizz\n7\n8\nFizz\nBuzz\n11\nFizz\n13\n14\nFizzBuzz");
    }

    private String putBreakLineOnStringIfNecessary(int limit, int currentIndex) {
        if (currentIndex < limit) {
          return "\n";
        }
        return "";
    }
}

